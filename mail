https://apc01.safelinks.protection.outlook.com/ap/t-59584e83/?url=https%3A%2F%2Fteams.microsoft.com%2Fl%2Fmeetup-join%2F19%253ameeting_ZTVkMjY3ZWEtNGM0Ny00OGVlLTlkNmYtMGYyZTU5NzM4NzQ3%2540thread.v2%2F0%3Fcontext%3D%257b%2522Tid%2522%253a%2522189de737-c93a-4f5a-8b68-6f4ca9941912%2522%252c%2522Oid%2522%253a%2522fda0da8a-fdd5-4c40-9469-31ecf3966012%2522%257d&data=05%7C02%7Craj.kishore%40hcltech.com%7C95e7c22e73804cb4eb0308dccb515ac0%7C189de737c93a4f5a8b686f4ca9941912%7C0%7C0%7C638608797477675340%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=ZLiBjSh4%2Bn8MUQUCRk3%2FOmNyU5kqIOJdkdik9JVm%2B%2Bs%3D&reserved=0
https://apc01.safelinks.protection.outlook.com/ap/t-59584e83/?url=https%3A%2F%2Fteams.microsoft.com%2Fl%2Fmeetup-join%2F19%253ameeting_ZTVkMjY3ZWEtNGM0Ny00OGVlLTlkNmYtMGYyZTU5NzM4NzQ3%2540thread.v2%2F0%3Fcontext%3D%257b%2522Tid%2522%253a%2522189de737-c93a-4f5a-8b68-6f4ca9941912%2522%252c%2522Oid%2522%253a%2522fda0da8a-fdd5-4c40-9469-31ecf3966012%2522%257d&data=05%7C02%7Craj.kishore%40hcltech.com%7C95e7c22e73804cb4eb0308dccb515ac0%7C189de737c93a4f5a8b686f4ca9941912%7C0%7C0%7C638608797477675340%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=ZLiBjSh4%2Bn8MUQUCRk3%2FOmNyU5kqIOJdkdik9JVm%2B%2Bs%3D&reserved=0
------------------------------------------------------------------------------------------------
I have moved the spack build script to the workspace directory into a subdirectory called spack-build
This will allow us to use manually downloaded packages (which some packages require) without the concern of running out of space.  Longer term I'd like to archive these in our github repo for reproducibility
 
Please configure the spack account so it can access our github repository so we can properly version and manage the build script and local packages properly.
 
Gromacs now builds and is installed.
All but 1 package now builds (rdkit).
  
   rdkit fails building a dependency with a strange cmake error building the schrodinger maestro file parser
 
please post to slack and see if anyone knows why.  Here are the details:

spack install --use-buildcache auto --fresh  rdkit@2023_03_1  %gcc@8.5.0 ^boost@1.70.0  target=x86_64_v3 os=rhel8
isolating the maeparser build and using the same boost build as in rdkit generates the same error
spack install -j16 --use-buildcache auto --fresh  maeparser  %gcc@8.5.0 ^/j67hmtv  target=x86_64_v3 os=rhel8
The output from the build is in this file
/home/spack/workspace/spack-build/maeparser-build-out.txt

---------------------------------------------------------------
1113 errors found in build log:
  >> 90      BufferTest.cpp:(.text+0x21): undefined reference to `boost::unit_t
             est::lazy_ostream::inst'
>> 91      BufferTest.cpp:(.text+0xb3): undefined reference to `boost::test_t
             ools::tt_detail::report_assertion(boost::test_tools::assertion_res
             ult const&, boost::unit_test::lazy_ostream const&, boost::unit_tes
             t::basic_cstring<char const>, unsigned long, boost::test_tools::tt
             _detail::tool_level, boost::test_tools::tt_detail::check_type, uns
             igned long, ...)'

----------------------------------------

I tried installing static but the boost library in rdkit is shared so that wouldn't be helpful even if it did build (ie, it couldn't be used to install rdkit)
 
WRT gromacs it does not load properly and the spider file error is back.   Looking at the spider error:
          lpathA = {
             = 1,
            ["/software/spack.0.22.1/opt/spack/linux-rhel8-x86_64_v3/gcc-8.5.0/intel-oneapi-mkl-2024.0.0-p7p6wth/mkl/2024.0/lib"] = 1,
          },
(i added the underscores to highlight what is most likely a missing path.). Not sure how to get this fixed.   Refreshing lmod didn't resolve this.
mkl is used in a lot of packages so I'm hesitant to remove and recreate it.   It would be good to post this on slack and see what suggestions we might get for correcting this (short of delete and recreate).
 ========================
Adding jupyter kernels & widgets using spack
Jupyterlab and extra kernels & widgets built and installed.   However, They do not work properly because they did not register properly with jupyter.   I was unable to get them to register properly with a spack build (even when I preloaded jupyterlab into the build environment.).  I'd appreciate it if this question was posted to slack to learn what is the proper way to add extra kernels and nglview (and it's widget) using spack.  (spack has packages for all 3 that I built and want to install globally for our users: bash, R, nglview)
================
 ========================
Adding jupyter kernels & widgets using spack
Jupyterlab and extra kernels & widgets built and installed.   However, They do not work properly because they did not register properly with jupyter.   I was unable to get them to register properly with a spack build (even when I preloaded jupyterlab into the build environment.).  I'd appreciate it if this question was posted to slack to learn what is the proper way to add extra kernels and nglview (and it's widget) using spack.  (spack has packages for all 3 that I built and want to install globally for our users: bash, R, nglview)
 
---------------------------
I just tried maeparser first, since it was the dependency throwing the error.   Building with -fPIC fails because maeparser does lazy loading.
 
spack install -j16 --use-buildcache auto --fresh  maeparser  %gcc@8.5.0 ^boost@1.70.0  cppflags=-fPIC target=x86_64_v3 os=rhel8
arget=x86_64_v3 os=rhel8
1113 errors found in build log:
  >> 90      BufferTest.cpp:(.text+0x21): undefined reference to `boost::unit_t
             est::lazy_ostream::inst'
>> 91      BufferTest.cpp:(.text+0xb3): undefined reference to `boost::test_t
             ools::tt_detail::report_assertion(boost::test_tools::assertion_res
             ult const&, boost::unit_test::lazy_ostream const&, boost::unit_tes
             t::basic_cstring<char const>, unsigned long, boost::test_tools::tt
             _detail::tool_level, boost::test_tools::tt_detail::check_type, uns
             igned long, ...)'

